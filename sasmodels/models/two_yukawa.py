r"""
This model calculates the interparticle structure factor for a colloidal system
with an interaction potential consisting of two Yukawa terms. If one Yukawa term
is chosen to be an attractive potential and the other a repulsive potential, the
two Yukawa potential can simulate a potential with both a short-range attraction
and long-range repulsion (SALR).[1,2] When combined with an appropriate form
factor $P(q)$, this allows for inclusion of the interparticle interference
effects due to a relatively complex potential.

The interaction potential $V(r)$ is

.. math::

    \frac{V(r)}{k_BT} = \begin{cases}
    \infty & r < 2R \\
    K_1 \frac{e^{-Z_1(r-1)}}{r} + K_2 \frac{e^{-Z_2(r-1)}}{r} & r \geq 2R
    \end{cases}

where $R$ is radius_effective.
$K_1$ ( or $K_2$ ) is positive when there is a repulsion.
$K_1$ ( or $K_2$ ) is negative when there is an attraction.
And $r$ is the normalized inter-particle distance, $\frac{r_{cc}}{2R}$. 
$r_{cc}$ is the distance between the center-of-mass of particles.

.. note::

   This routine only works for a potential with two Yukawa terms. If the
   amplitude, $K_1$ or $K_2$, of either Yukawa potential becomes zero, the
   routine may self-destruct! But one can make either amplitude very small if
   there is a need to make one amplitude to be zero. Also, $Z_1$ and $Z_2$
   should be different. If these two numbers are identical, it essentially
   becomes a potential with one Yukawa term. But these two values can be very
   close to each other. Therefore, the initial parameters of $Z_1$ and $Z_2$
   should be different.

.. note::

   Earlier versions of SasView did not incorporate the so-called $\beta(q)$
   ("beta") correction [3] for polydispersity and non-sphericity. This is only
   available in SasView versions 5.0 and higher.

This code calculates the structure factor, $S(q)$, of one component liquid
systems interacting with a two-term Yukawa potential with the mean spherical
approximation (MSA). The structure factor is generated by following Blum's
method,[4] in which the structure factor is solved using the Ornstein-Zernike
equation by Baxter's Q-method with the MSA closure.

The algorithm used in this model was originally proposed and developled by Liu
et al. in 2005 and implemented using MatLab.[1] The algorithm was later
reimplemented using C and Igor. The codes for a two Yukawa potential in SasView are mostly based on the C codes written by M. Hennig
in 2010.

When the overall attraction is not very strong, this algorithm produces
reasonably accurate results.[2] However, when the net attraction is very strong,
it has been shown that the fitting algorithm tends to overestimate the
attraction strength. Accuracy of this algorithm was evaluated by Broccio, et
al.[2] It should be noted that the MSA is not be an accurate closure for 
systems with strong attractions. So cares need to be taken when having quantitative
discussions of the fitting results for those systems.

When using the O-Z equation to obtain the structure factor, it assumes that a
system is in a liquid state. However, when the attraction potential is too
strong the system may not be in a liquid state, and the O-Z equation may not
have a solution, or the solution may be unphysical. It should be noted that any closure 
for a O-Z euqation is an approximation. Thus, the structure factor calculated using a closure
is an approximation of the real structure factor. Its accuracy varies for different parameter ranges.
One should not "blindly" trust the results. This is true too for the MSA closure used here to solve 
the O-Z equation for two Yukawa potential.[2]

References
----------

#. Y. Liu, W. R. Chen, S-H Chen, *J. Chem. Phys.*, 122 (2005) 044507

#. M. Broccio, D. Costa, Y. Liu, S-H Chen, *J. Chem. Phys.*, 124 (2006) 084501

#. M. Kotlarchyk and S-H Chen, *J. Chem. Phys.*, 79 (1983) 2461-2469

#. J. S. Hoye, L. Blum, J. Stat. Phys., 16(1977) 399-413

Authorship and Verification
---------------------------

* **Author:** Yun Liu **Date:** January 22, 2024
* **Last Modified by:** Yun Liu **Date:** January 22, 2024
* **Last Reviewed by:** Yun Liu **Date:** January 22, 2024
"""
import numpy as np
from numpy import inf

name = "Two_Yukawa"
title = "User model for two Yukawa structure factor (S(q))"
description = """"""

category = "structure-factor"
structure_factor = True
single = False  # make sure that it has double digit precision
opencl = False  # related with parallel computing

valid = "k1 != 0 && k2 != 0 && z1 != z2"

parameters = [ 
#   ["name", "units", default, [lower, upper], "type", "description"],
    ["radius_effective", "Ang", 50.0, [-inf, inf], '', ''],
    ['volfraction', '', 0.1, [-inf, inf], '', ''],
    ['k1', '', -6, [-inf, inf], '', ''],
    ['k2', '', 2.0, [-inf, inf], '', ''],
    ['z1', '', 10.0, [-inf, inf], '', ''],
    ['z2', '', 2.0, [-inf, inf], '', ''],
    ]

def Iq(q, radius_effective, volfraction, k1, k2, z1, z2):
    from .TwoYukawa.CalTYSk import CalTYSk
    Q_eff = 2*radius_effective*q
    Qmax = max(Q_eff.max(), 700.1)
    Q = np.arange(0, Qmax, 0.04)
    Sk, num_roots, r, Gr, error, cVar = CalTYSk(z1,z2,k1,k2,volfraction,Q,warnFlag=False)
    Sk_eff = np.interp(Q_eff, Q, Sk)
    return Sk_eff
Iq.vectorized = True  # Iq accepts an array of q value

# The test results were generated with MatLab Code (TYSQ22) (Jan. 22, 2024)
# Note that this test reverses the definition of the original code : k1 > 0 means repulsion and k1 < 0 means attraction.
#tests = [
#    [{'scale': 1.0, 'background' : 0.0, 'radius_effective' : 50.0,
#      'volfraction' : 0.2, 'k1' : -6, 'k2':2.0, 'z1':10, 'z2':2.0},
#     [0.0009425, 0.029845], [0.126775, 0.631068]],
#]
